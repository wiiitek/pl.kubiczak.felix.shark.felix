<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>pl.kubiczak.felix.shark.parent</artifactId>
		<groupId>pl.kubiczak.felix.shark</groupId>
		<version>1.4</version>
		<relativePath>../pl.kubiczak.felix.shark.parent/pom.xml</relativePath>
	</parent>

	<artifactId>pl.kubiczak.felix.shark.felix</artifactId>
	<version>1.4</version>
	<packaging>bundle</packaging>

	<name>Shark: Felix</name>
	<url>http://site.kubiczak.pl/${project.artifactId}</url>

	<scm>
		<connection>scm:git:https://github.com/wiiitek/${project.artifactId}.git</connection>
		<developerConnection>scm:git:git@github.com:wiiitek/${project.artifactId}.git</developerConnection>
		<tag>1.4</tag>
		<url>https://github.com/wiiitek/${project.artifactId}</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>ftp.maven.kubiczak.pl</id>
			<url>ftp://maven.kubiczak.pl</url>
		</repository>
		<site>
			<id>ftp.site.kubiczak.pl</id>
			<url>ftp://site.kubiczak.pl/${project.artifactId}</url>
		</site>
	</distributionManagement>

	<properties>
		<felix.filename>org.apache.felix.main.distribution-${version.felix}.zip</felix.filename>

		<amdatu.repository>http://repository.amdatu.org/release</amdatu.repository>

		<bundles.deploy.dir>bundle</bundles.deploy.dir>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>pl.kubiczak.felix.shark</groupId>
				<artifactId>pl.kubiczak.felix.shark.dependencies</artifactId>
				<version>1.4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>maven.kubiczak.pl</id>
			<url>http://maven.kubiczak.pl</url>
		</repository>
	</repositories>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
			</extension>
		</extensions>
		<finalName>org.apache.felix.org.apache.felix.webconsole-shark.felix.branding-${project.version}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Fragment-Host>org.apache.felix.webconsole</Fragment-Host>
						<Export-Package>!*</Export-Package>
						<Bundle-Name>Shark: Webconsole branding</Bundle-Name>
						<Bundle-SymbolicName>pl.kubiczak.felix.shark.felix.webconsole.branding</Bundle-SymbolicName>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>download-felix-framework</id>
			<activation>
				<file>
					<!--
						if EL is used then property needs to be declared in current pom.xml
						but we would rather have ${version.felix} defined in parent pom.xml
						that's why we are using filename with hardcoded version here:
					-->
					<missing>${basedir}/org.apache.felix.main.distribution-5.4.0.zip</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-felix-framework</id>
								<phase>initialize</phase>
								<goals>
									<goal>download-single</goal>
								</goals>
								<configuration>
									<url>${felix.mirror}/felix</url>
									<fromFile>${felix.filename}</fromFile>
									<toDir>${project.basedir}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>extract-felix-framework-and-download-bundles</id>
			<activation>
				<property>
					<name>env.SHARK_HOME</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>truezip-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>extract-felix-framework</id>
								<phase>install</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<fileset>
										<directory>
											${project.basedir}/${felix.filename}/felix-framework-${version.felix}
										</directory>
										<outputDirectory>${env.SHARK_HOME}/${felix.dir}</outputDirectory>
									</fileset>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>backup-felix-config-properties</id>
								<phase>install</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${env.SHARK_HOME}/${felix.dir}/conf</directory>
										</resource>
									</resources>
									<outputDirectory>${env.SHARK_HOME}/${felix.dir}/conf.bak</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>deploy-felix-start-scripts-and-config</id>
								<phase>install</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>src/main/felix-framework</directory>
										</resource>
									</resources>
									<outputDirectory>${env.SHARK_HOME}/${felix.dir}</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>copy-webconsole-branding-to-felix</id>
								<phase>install</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.jar</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>
										${env.SHARK_HOME}/${felix.dir}/${bundles.deploy.dir}
									</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>download-felix-base-bundles</id>
								<phase>install</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.configadmin</artifactId>
										</artifactItem>
										<artifactItem>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.eventadmin</artifactId>
										</artifactItem>
										<artifactItem>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.fileinstall</artifactId>
										</artifactItem>
										<!-- HTTP -->
										<artifactItem>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.http.servlet-api</artifactId>
										</artifactItem>
										<artifactItem>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.http.jetty</artifactId>
										</artifactItem>
										<!-- Webconsole -->
										<artifactItem>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.webconsole</artifactId>
											<classifier>all</classifier>
										</artifactItem>
										<!-- Declarative Services (SCR) -->
										<artifactId>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.scr</artifactId>
										</artifactId>
										<!-- Dependency Management -->
										<artifactId>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.metatype</artifactId>
										</artifactId>
										<artifactId>
											<groupId>org.apache.felix</groupId>
											<artifactId>org.apache.felix.dependencymanager</artifactId>
										</artifactId>

										<!-- Aries Blueprint -->
										<artifactId>
											<groupId>org.apache.aries.blueprint</groupId>
											<artifactId>org.apache.aries.blueprint</artifactId>
										</artifactId>
										<artifactId>
											<groupId>org.apache.aries.proxy</groupId>
											<artifactId>org.apache.aries.proxy</artifactId>
										</artifactId>
										<artifactId>
											<groupId>org.apache.aries</groupId>
											<artifactId>org.apache.aries.util</artifactId>
										</artifactId>

										<!-- commons -->
										<artifactId>
											<groupId>org.apache.commons</groupId>
											<artifactId>commons-lang3</artifactId>
										</artifactId>
									</artifactItems>
									<outputDirectory>
										${env.SHARK_HOME}/${felix.dir}/${bundles.deploy.dir}
									</outputDirectory>
									<prependGroupId>true</prependGroupId>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>download-amdatu-bundles</id>
			<activation>
				<property>
					<name>env.SHARK_HOME</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-resourcehandler</id>
								<phase>initialize</phase>
								<goals>
									<goal>download-single</goal>
								</goals>
								<configuration>
									<url>${amdatu.repository}/org.amdatu.web.resourcehandler</url>
									<fromFile>org.amdatu.web.resourcehandler-1.0.9.jar</fromFile>
									<toDir>${env.SHARK_HOME}/${felix.dir}/${bundles.deploy.dir}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
